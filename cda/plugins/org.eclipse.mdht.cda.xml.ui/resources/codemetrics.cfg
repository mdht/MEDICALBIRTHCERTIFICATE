0.04-Document Code,self.code->excluding(null)
1.06-Gender,self.recordTarget.patientRole.patient.administrativeGenderCode
1.08-Marital Status,self.recordTarget.patientRole.patient.maritalStatusCode
1.10-Race,self.recordTarget.patientRole.patient.raceCode
1.11-Ethnicity,self.recordTarget.patientRole.patient.ethnicGroupCode
Religious Affiliation,self.recordTarget.patientRole.patient.religiousAffiliationCode
3.03-Contact Type,self.participant.associatedEntity.classCode
3.03-Contact Relationship,participant.associatedEntity.code
2.01-Language,self.recordTarget.patientRole.patient.languageCommunication.languageCode
4.02-Provider role coded, documentationOf.serviceEvent.performer.functionCode.code 
4.04-Provider Type, documentationOf.serviceEvent.performer.assignedEntity.code
5.02-Health Insurance Type,hitsp::InsuranceProvider.allInstances()->select(o : hitsp::InsuranceProvider | not o.code.oclIsUndefined())
5.09-Patient Relationship to Subscriber,hitsp::InsuranceProvider.allInstances()->select(o : hitsp::InsuranceProvider | o.getActs()->select(act : cda::Act | act.oclIsKindOf(ihe::PayerEntry))->forAll(a : cda::Act | a.participant->exists (par : cda::Participant2 | par.typeCode = vocab::ParticipationType::COV and par.participantRole.classCode = vocab::RoleClassRoot::PAT and par.participantRole.code.codeSystem = '2.16.840.1.113883.5.111' and (par.participantRole.code.code = 'FAMDEP' or par.participantRole.code.code='HANDIC' or par.participantRole.code.code ='INJ' or par.participantRole.code.code='SELF' or par.participantRole.code.code='SPON' or par.participantRole.code.code ='STUD' or par.participantRole.code.code='FSTUD' or par.participantRole.code.code='PSTUD'))))  
6.02-Adverse Event Type,ihe::AllergyIntolerance.allInstances()->select(o : ihe::AllergyIntolerance |o.code.code ='419511003')
6.04-Product Coded,ihe::AllergyIntolerance.allInstances()->select(o : ihe::AllergyIntolerance |  o->excluding(null).participant->excluding(null).participantRole->excluding(null).playingEntity->exists(not code.oclIsUndefined())  )
6.06-Reaction Coded, ihe::AllergyIntolerance.allInstances()->select(o : ihe::AllergyIntolerance | o->excluding(null).entryRelationship->excluding(null).observation->excluding(null)->select(oclIsTypeOf(ihe::ProblemEntryReactionObservationContainer))->exists(not code.oclIsUndefined())  )
6.08-Severity Coded ,ihe::AllergyIntolerance.allInstances()->select(o : ihe::AllergyIntolerance | o->excluding(null).entryRelationship->excluding(null).observation->excluding(null)->select(oclIsTypeOf(ihe::Severity))->exists(not code.oclIsUndefined())  )
7.02-Problem Type,ccd::ProblemAct.allInstances()->select(o : ccd::ProblemAct | o->excluding(null).entryRelationship->excluding(null).observation->excluding(null)->select(oclIsTypeOf(ccd::ProblemObservation))->exists(not code.oclIsUndefined())  )
7.04-Problem Code,ihe::ProblemEntry.allInstances()->select(o : ihe::ProblemEntry | not o.code.oclIsUndefined() )
7.12-Problem Status,hitsp::Condition.allInstances()->select(o : hitsp::Condition | not o.statusCode.oclIsUndefined())
8.19-Type of Medication,hitsp::Medication.allInstances()->select(o : hitsp::Medication | not o.code.oclIsUndefined())
8.20-Status of Medication,hitsp::Medication.allInstances()->select(o : hitsp::Medication | not o.statusCode.oclIsUndefined())
8.13 Coded Product Name,hitsp::MedicationInformation.allInstances()->select(o : hitsp::MedicationInformation | not o.manufacturedMaterial.code.oclIsUndefined() )
8.07 Route,hitsp::Medication.allInstances()->select(o : hitsp::Medication | not o.routeCode.oclIsUndefined())
8.08 Dose,hitsp::Medication.allInstances()->select(o : hitsp::Medication | not o.doseQuantity.oclIsUndefined())
8.09 Site,hitsp::Medication.allInstances()->select(o : hitsp::Medication |  not o.approachSiteCode->isEmpty() )
8.10 Product Form,hitsp::Medication.allInstances()->select(o : hitsp::Medication |  not o.administrationUnitCode->isEmpty() )
8.21-Indication,hitsp::Medication.allInstances()->select(o : hitsp::Medication | o->excluding(null).entryRelationship->excluding(null).observation->excluding(null)->select(oclIsTypeOf(ccd::ProblemObservation))->exists(not code.oclIsUndefined())  )
8.23-Reaction,hitsp::Medication.allInstances()->select(o : hitsp::Medication | o->excluding(null).entryRelationship->excluding(null).observation->excluding(null)->select(oclIsTypeOf(ihe::ProblemEntryReactionObservationContainer))->exists(not code.oclIsUndefined())  )
8.24-Vehicle,hitsp::Medication.allInstances()->select(o : hitsp::Medication | o->excluding(null).participant->excluding(null).participantRole->excluding(null).playingEntity->exists(not code.oclIsUndefined())  )
8.28-Quantity Ordered,hitsp::MedicationOrderInformation.allInstances()->select(o : hitsp::MedicationOrderInformation | not o.quantity.oclIsUndefined())
8.38-Quantity Dispensed, hitsp::MedicationOrderInformation.allInstances()->select(o : hitsp::MedicationOrderInformation | o.getSupplies()->exists(not quantity.oclIsUndefined()) )
8.40-Fill Status,hitsp::MedicationOrderInformation.allInstances()->select(o : hitsp::MedicationOrderInformation | not o.getSupplies()->exists(not statusCode.oclIsUndefined()) )
13.06-Coded Product Name,hitsp::Immunization.allInstances()->select(o : hitsp::Immunization | not o.consumable.manufacturedProduct.manufacturedMaterial.code.oclIsUndefined() )
13.10-Refusal reason, hitsp::Immunization.allInstances()->select(o : hitsp::Immunization | o->excluding(null).entryRelationship->excluding(null)->select(typeCode=vocab::x_ActRelationshipEntryRelationship::RSON).act->excluding(null)->exists(not code.oclIsUndefined())  )
14.03-Result Type  (Vital signs),hitsp::VitalSign.allInstances()->select(o : hitsp::VitalSign	| not o.code.oclIsUndefined() )
14.05-Results Value (Unit of Measure), hitsp::VitalSign.allInstances()->select(o : hitsp::VitalSign | not o.value.oclAsType(datatypes::PQ).unit->oclIsUndefined()   )
14.04-Result Status (Always True),false
15.03-Result Type (Lab),hitsp::Result.allInstances()->select(o : hitsp::Result | not o.code.oclIsUndefined() )
15.05-Results Value (Unit of Measure), hitsp::Result.allInstances()->select(o : hitsp::Result | not o.value.oclAsType(datatypes::PQ).unit->oclIsUndefined()   )
15.06-Result Interpretation, hitsp::Result.allInstances()->select(o : hitsp::Result | not o.interpretationCode->isEmpty() )
15.04-Result Status (Always True), false
16.02-Encounter Type , hitsp::Encounter.allInstances()->select(o : hitsp::Encounter | not o.code.oclIsUndefined() )
16.07-Admission Type  , hitsp::Encounter.allInstances()->select(o : hitsp::Encounter | not o.priorityCode.oclIsUndefined() )
16.06-Admission Source  , hitsp::Encounter.allInstances()->select(o : hitsp::Encounter |  o->excluding(null).participant->excluding(null)->exists(not code.oclIsUndefined() and typeCode = vocab::ParticipationType::ORG)  )	
17.02-Procedure type, hitsp::Procedure.allInstances()->select(o : hitsp::Procedure | not o.code.oclIsUndefined() )